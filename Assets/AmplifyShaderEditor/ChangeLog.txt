Release Notes:
v0.3.0 dev 001
* Fixed issue on where deprecated nodes needed to be available to be replaced by their replacement type
* Fixed issues on all conditional nodes
* Fixed issue on local variable creations on vertex shader
* Fixed issue on 'Commentary' node
* Amplify Texture dependency is dynamically set through asset guid
* Texture Sampler will quietly ignore virtual object if AT is not found in project and will not generate a broken shader
* Deprecated nodes are automatically excluded from the palette
* Updated version in all samples
* Optimized 'Multiply' and 'Divide' nodes 
* Added Edge Length based tessellation
* Added Fixed Amount based tessellation

v0.2.6 dev 001
* Fixed issue on 'Virtual Texture Object' node
* Fixed issue on 'If' node
* Fixed issues in 'Parallax Occlusion Mapping' node
* Fixed issues on 'Texture Sampler' node
* Fixed issue for translucency on point lights
* Fixed issues on 'Texture Coordinates' node
* Fixed issue on not correctly syncing ASE when when hitting paste button on our custom inspector
* Avoiding null pointer exception when compiling a 'Texel Size' node without references 
* Re-Organized ASE folder system and added initial pop-up window to clean old/deprecated data
* Tweaked Default/Material values UI on Property nodes
* Node Properties window can now be show by double clicking a node
* Renamed Uniform parameter type to Global 
* Added Distance-Based tessellation. Can be activated/configured on Master Node properties
    * Added Tessellation sample
* Added emission baking support. Queue must be set to "Geometry" to work properly
* Added Tiled Atlas sample
* Added scenes for each sample
* Added tool tips for Master Node properties 

v0.2.5 dev 004
* Added Parallax Occlusion Mapping node (uses linear search with customizable samples in conjuntion with interval mapping for refinement of sidewalls)
* Added simple snapping behavior when moving nodes (left-control)
* Fixed background grid image sliding when zooming
* Fixed issue with 'Texcoord Vertex Data' on writing
* Fixed issues with default values of 'Virtual Texture Object'
* Fixed issues when drawing 'Matrix3x3' and 'Matrix4x4' nodes
* Fixed compilation error when creating builds

v0.2.5 dev 003
* Fixed issues on 'Texture Coordinate' node
* Fixed issues with 'Texture Sample' node not reading the correct values from older shaders versions
* Fixed issues with instanced texture samples
* Fixed issues with 'Texel Size' node
* Fixed issues with adding new categories on community created nodes 
    * Custom category colors can now also be set up via NodeAttributes(...) 
* Created simpler method ( GeneratePortInstructions(...) ) to generate input instructions. Handy for community members which are creating new custom nodes
* Fixed issue with propagating incorrect port types on master node when loading shader from older versions
* Fixed issues with parallax example
* Alpha channel/Opacity port is forced to 1 if Keep Alpha is set to true and port is not connected to prevent UI issues
* Added index property in '[VS] Vertex TexCoord' node and marked '[VS] Vertex TexCoord1' node as deprecated 
* Tweaked collision area on minimize/maximize buttons on lateral windows
* Small optimization on 'Custom Expression' node
* Added support for virtual texturing via Amplify Texture
* Community Node additions
    * Jason Booth
        * Added 'Vertex To Fragment' node

v0.2.5 dev 002
* Added 'Texture Object' node
* Tweaked 'Texture Sample' node behavior to use the new 'Texture Object' node
* Added Stencil Buffer support
* Added Depth foldout with access to ZWrite, ZTest and Offset configuration
* Added AMPLIFY_SHADER_EDITOR preprocessor directive
* Fixed issue on not resetting instance variables counter on reset/load 
* Overall fixes on node UI and its adaptation when zooming out
 

v0.2.5 dev 001
* Added Color Mask option on Master Node
* Added access to additional UV sets on "Texture Sample" and "Texture Coordinates" nodes
* Fixed issue when attempting to connect a wire to a locked port
* Fixed issue with incorrectly adding '#pragma multi_compile_instancing' on non instanced property shaders
* Minor tweak on palette foldout behavior


v0.2.4 dev 007 
* Fixed issue on wrong auto-snapping wires with invisible, locked ports
* Fixed issue with version control on Master Node
* Added Transmission input port on Master Node
* Added 'Mip Mode' in 'Texture Sample' node 
* Property names can now be changed directly on node by double clicking on it
* Properties can be reordered through drag and drop operations on the Master Node properties via the Available Properties foldout area
* Min/Max values on 'Ranged Float' nodes can be modified directly on canvas

v0.2.4 dev 006 ( for internal reasons we had to skip dev 005 )
* Fixes issues on 'Panner' node
* Fixed issues with not correctly generating local variables according to port category
* Tweaked behavior and fixed issues on the 'Texture Coordinate' node
* Fixed issues on 'Texel Size' node
* Fixed issues on 'Local Vertex Pos' node
* Fixed issues with Burn Effect Sample
* Removed positive number restriction from Master Node 'Queue Index' property
* Custom Material Inspector can be selected/changed on Master Node
    * Done through the Custom Editor property
    * You can always reset to our own by hitting the Reset button next to hit
* Updated Rim Light Sample to use the new Space option on the 'View Dir' node
* Updated Parallax Sample to use the new Space option on the 'View Dir' node
* Added 'Translucency' input port into Master Node 
* Added 'Dithering' node
* Added Matcap Sample
* Added Dithering Sample
* Added Rendering Platforms selector on Master node
* Added Water Sample on a small terrain in the Sample Scene

v0.2.4 dev 004
* Fixed issues with wire shader
* Fixed issues with 'Texture Coordinates' node
* Removed warnings occurring on Unity v5.5
* Fixed issue with 'Append' Node 
* Fixed issue with ASE Custom Material Inspector 
* Tweaked 'Local Vertex Pos' node to output differently if generating code for vertex or fragment ports

Release Notes:
v0.2.4 dev 003
* Added Texture Reference dropdown to 'Texture Coordinates' node
* Added Render Path dropdown in Master Node
* Tweaked 'View Dir' node so you're able to choose between getting the result in tangent or world space
* Tweaked 'World Space Light Dir' to no longer use internal input port data when nothing is connected, instead worldPos is automaticaly fed into it
* Added Unity version check for wires shader and fix compatibility issues
* Added Normalize toggle into 'Screen Position' node 
* Community Node additions
    * Tobias Pott
        * Added 'Swizzle' node

v0.2.4 dev 002
* Added 'Layered Blend' node
* Added 'Weighted Blend' node
* Added 'Texel Size' node
* Merged '[VS] Vertex Color' and 'Vertex Color' nodes in order to avoid further confusions and marked the first one as deprecated
    * Node internally changes its output if it's writing to a vertex or fragment port
* Added 'Surface Depth' node
* Added 'Screen Depth' node
* Fixed issue with property nodes uniform variables not taking selected precision into account

v0.2.4 dev 001
* Added 'Parallax Mapping' node 
* Added 'Negate' node 
* Added Fake Window user sample 
* Added Parallax Mapping example with 4 iterations using the basic Parallax Mapping node 

v0.2.3 dev 002
* Added 'Custom Expression' node
* Precision used is now the least between the one selected in the node and main one selected on the master node
* 'Register Local Var' and 'Get Local Var' nodes can now be used on Master Node Vertex ports
* Improved wires visuals
* Fixed issue with local variables generation
* Fixed issue with switching port internal data from float to int
* Fixed cast issue with 'Remap' node
* Added all the supported shader models into the Master Node dropdown
    * When creating a shader the default selected is now 2.5 to match Unity default
* Community Node additions
    * The Four Headed Cat
        * Added 'Grayscale' node

v0.2.3 dev 001
* New control points can be added to wires to better manipulate its shape
    * Double click a wire to create an additional control point
    * Control points are selected, moved and deleted similar to regular nodes
* Fixed issue with box selection being active when dragging nodes with the 'Shift' key held down
* Fixed issues with wire resources not being correctly released when ASE is shut down
* Fixed issues with 'Pixel Normal World' and 'Vertex Normal World' nodes
* Fixed issue with 'Multiply' node on Matrix/Vector multiplications
* Fixed issue with 'Break To Components' node
* Fixed issue with 'Component Mask' node
* Fixed issue with wrong type propagation when replacing node connections 
* Fixed issue with instance references being lost on 'Texture Sample' and 'Screen Color' nodes
* Tweaked 'Object to World' and 'World to Object' nodes to be more compile friendly
* Added 'Model' matrix node
* Added 'Relay' node
* Added 'TriplanarObjectSpace' sample to Samples folder
* Added precision selector for variables ( known issue: precision info is not being taken into account when auto local vars are created )
* Community Node additions
    * The Four Headed Cat
        * Added 'Tau' node
    * Rea
        * Added 'Height Map Blend' node

v0.2.2 dev 001
* Fixed issue with 'Mask Clip Value' not being correctly synced between material and shader
* Added colored Debug Mode ... this is an experimental feature where each port and wire are colored according to its data type. Each color/type pair are not final
    * Hold 'P' key to enable debug mode and release it to disable it
    * Double hit 'P' key to toggle  debug mode on. Double hit 'P' key again to disable it.
* Added 'Matrix From Vectors' node
* Fixed issue with 'Vertex Binormal World' node	
* Added 'Shader Model' dropdown on Master Node properties
* Community Node additions
    * The Four Headed Cat
        * Fixed issues with 'Logical Operator' nodes
	
v0.2.1 dev 001
* Fixed multiple issues importing current version on top of v0.1.0 dev 001

v0.2.0 dev 003
* Mask Clip Value when used is registered as a Material Property

v0.2.0 dev 002
* Improved duplicate code detection system
* Slight improvement on save/update times ( important for Live Mode )
* Fixed issue with 'Texture Sample' node incorrectly outputting a float4 when no texture assigned and on Normal mode 
* Fixed issue on not opening the correct shader from a material inspector if a new one is selected from its dropdown
* Fixed issue with 'Length' node incorrectly changing its output type
* Community Node additions
    * The Four Headed Cat
        * Flipbook UV Animation

v0.2.0 dev 001
* Fixed issues with 'Get Local Var' node
    * Output port type is now correctly set to its reference type
    * Changed how references are saved so it won't be affected by order index re-ordering
* Fixed issue with 'Power' node
* Fixed issue with 'ATan2' node
* Fixed issue with 'Cross' node
* Community Node additions
    * The Four Headed Cat
        * Logical If
        * Pixelate
* Community Samples additions
    * The Four Headed Cat 
        * DissolveBurn
    * Mourelas Konstantinos
        * EnvironmentGradient
		
v0.1.5 dev 001
* Community Node additions
    * The Four Headed Cat ( moved to a separate 'Logical Operators' category )
        * Compare With Range
        * Compare Not Equal
        * Compare Lower Equal
        * Compare Greater Equal
        * Compare Lower
        * Compare Greater
    * Kebrus
        * Vertex Tangent World
        * Vertex Binormal World
* 'Register Local Var' node changes:
    * Is now independent from Master Node execution order and generates activation signals
    * Will always be executed even if not connected to Master Node 
    * Fixed issue updating name string array when loading from file		
    * Added order index to control their declaration order( lesser index declared first )
* Fixed issue on port type change not propagating in certain nodes
* Hitting Escape key will disable context palette menu if active
* Fixed issue where right mouse clicking on certain port areas would delete their wire connection
* Minor improvement on nodes performance

v0.1.4 dev 002
* Dynamic type nodes now also reacting to input port disconnections
* Updated TFHCRemap node from benderete

0.1.4 dev 001
* Fixed issue with order index not being correctly read/written
* Redone Refraction Shader according to rea suggestion 
* Register Local Var node now has a title style similar to Property Nodes with the local var name always visible 
* Added Get Local Var Node. It allows the user to use already registered local vars anywhere in the graph
* Added Custom Node Remap ("TFHC - Remap") created by user benderete
* Fixed issue on Texture Sample UV port not correctly casting to float2 when needed
* Fixed issue with Texture Sample node not adapting layout when reference is in normal mode

v0.1.3 dev 003
* Added RegisterLocalVar node. This is a node to improve shader readability in certain situations, as it forces the shader to create a local var containing its input value and always use that as output
* Added Screen Color Texture Reference feature
* Created Simple Refraction example ( Samples/SimpleRefraction ) 
* Fixed issues with sampler instance resizing
* Fixed issue with Fresnel node incident vector
* Fixed issue with attemping connection removal on inexistent nodes ( bug affecting Append node )
* Fixed issue with overwriting render type and queue values with Blend Mode default values on read from file

v0.1.3 dev 002
* Fixed multiple issues with deleting a Texture Sample node being referenced by other nodes
* Tweaked Texture Sample reference UI 

v0.1.3 dev 001
* Fixed issue when releasing mouse drag on menu areas not resetting auto*pan
* Tweaked Shader Instancing UI
* Fixed issue with material inspector crashing when updating a property with ASE window turned off
* Fixed issue with custom UI skins not being correctly initialized under some conditions
* Added Texture Reference feature
* Added 'Simple Blur' example to demonstrate how Texture referencing works
* Added small 'Made with Amplify Shader Editor' info as comment on generated shaders

v0.1.2 dev 003
* Fixed issues with opening materials via inspector with no ASE window initialized  

Release Notes v0.1.2 dev 002
* Added GPU Instancing ( see Samples/SimpleGPUInstancing example )
* Added Screen Color node 
* Fixed issue on version testing
* Tweaked Master Node icon 
* Added additional icon into top-left master node node indicating if gpu instancing is being used or not

Release Notes v0.1.2 dev 001
* Fixed typo on Texture Coordinate node
* Added explicit control on Render Type and Queue. They will be automatically set when a Blend Mode is selected.
* Added Fresnel node
* Fixed Trigonometry typo 
* Improved local var generation on op nodes
* Added FWidth node
* Fixed issue with not immediately updating shader when hitting the Live Shader Mode button

v0.1.1 dev 001
* Community Contribution from kebrus: Added Rotator node, rotates UV Coordinates/ Vector2 nodes 
* Fixed Vector2 Append Node bug
* Fixed Int to Float cast issues
* Added Shader title area on top canvas to forbidden node interaction area
* Adjusted Auto-Pan behaviour
* Fixed issue with nodes infinite loop detection
* Tweaked mouse detection inside main canvas
* Fixed Queue Order typo when building shader
* Improved notifications when impossible cast is requested
* Added new VectorFromMatrix which gets a specific row or column from a 3x3 or 4x4 matrix
* Automatically hiding Order Index on Uniform Property Type nodes
* Simpler Searchable Node List also being called by hitting the space bar if focus is on main node canvas